
import { useEffect, useState } from "react";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Separator } from "@/components/ui/separator";
import { 
  FileText, 
  User, 
  Calendar, 
  Phone, 
  MapPin, 
  Star, 
  Clock, 
  AlertTriangle,
  Heart,
  Download,
  Share2
} from "lucide-react";
import { Link, useNavigate } from "react-router-dom";

interface SummaryData {
  symptoms: string[];
  specialty: string;
  urgency: "low" | "medium" | "high";
  responses: Record<string, string>;
  conversation: any[];
}

interface Doctor {
  id: number;
  name: string;
  specialty: string;
  rating: number;
  reviews: number;
  location: string;
  availability: string;
  phone: string;
  image: string;
}

const doctors: Doctor[] = [
  {
    id: 1,
    name: "Dr. Sarah Johnson",
    specialty: "Cardiologist",
    rating: 4.8,
    reviews: 127,
    location: "Medical Center Downtown",
    availability: "Available Today",
    phone: "+1 (555) 123-4567",
    image: "https://images.unsplash.com/photo-1559839734-2b71ea197ec2?w=400&h=400&fit=crop&crop=face",
  },
  {
    id: 2,
    name: "Dr. Michael Chen",
    specialty: "General Practice",
    rating: 4.9,
    reviews: 203,
    location: "Community Health Clinic",
    availability: "Next Available: Tomorrow",
    phone: "+1 (555) 234-5678",
    image: "https://images.unsplash.com/photo-1612349317150-e413f6a5b16d?w=400&h=400&fit=crop&crop=face",
  },
  {
    id: 3,
    name: "Dr. Emily Rodriguez",
    specialty: "Pediatrics",
    rating: 4.7,
    reviews: 89,
    location: "Children's Medical Center",
    availability: "Available Today",
    phone: "+1 (555) 345-6789",
    image: "https://images.unsplash.com/photo-1594824797147-5cd0b4cf9e67?w=400&h=400&fit=crop&crop=face",
  },
];

const ChatSummary = () => {
  const navigate = useNavigate();
  const [summaryData, setSummaryData] = useState<SummaryData | null>(null);
  const [recommendedDoctors, setRecommendedDoctors] = useState<Doctor[]>([]);

  useEffect(() => {
    const stored = sessionStorage.getItem("chatSummary");
    if (!stored) {
      navigate("/chat");
      return;
    }

    const data: SummaryData = JSON.parse(stored);
    setSummaryData(data);

    // Filter doctors based on specialty
    const filtered = doctors.filter(doctor => 
      doctor.specialty === data.specialty || 
      data.specialty === "General Practice"
    );
    setRecommendedDoctors(filtered.length > 0 ? filtered : doctors.slice(0, 2));
  }, [navigate]);

  const getUrgencyColor = (urgency: string) => {
    switch (urgency) {
      case "high": return "text-red-600 bg-red-50 border-red-200";
      case "medium": return "text-orange-600 bg-orange-50 border-orange-200";
      default: return "text-green-600 bg-green-50 border-green-200";
    }
  };

  const getUrgencyText = (urgency: string) => {
    switch (urgency) {
      case "high": return "High Priority - Seek immediate care";
      case "medium": return "Medium Priority - Schedule within 1-2 days";
      default: return "Low Priority - Schedule when convenient";
    }
  };

  const handlePrint = () => {
    window.print();
  };

  const handleShare = async () => {
    if (navigator.share) {
      try {
        await navigator.share({
          title: 'Doctori AI Health Summary',
          text: 'My health consultation summary from Doctori AI',
          url: window.location.href
        });
      } catch (error) {
        console.log('Error sharing:', error);
      }
    }
  };

  const handleStartNewChat = () => {
    sessionStorage.removeItem("chatSummary");
    navigate("/chat");
  };

  if (!summaryData) {
    return (
      <div className="min-h-screen bg-muted/20 py-8">
        <div className="container max-w-4xl mx-auto">
          <Card className="shadow-medical">
            <CardContent className="p-8 text-center">
              <p className="text-muted-foreground">Loading your health summary...</p>
            </CardContent>
          </Card>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-muted/20 py-8">
      <div className="container max-w-4xl mx-auto space-y-6">
        {/* Header */}
        <Card className="shadow-medical">
          <CardHeader className="bg-gradient-primary text-white">
            <CardTitle className="flex items-center space-x-2">
              <FileText className="h-6 w-6" />
              <span>Your Health Summary</span>
            </CardTitle>
            <p className="text-white/90 text-sm">
              Generated by Doctori AI • {new Date().toLocaleDateString()}
            </p>
          </CardHeader>
        </Card>

        {/* Urgency Alert */}
        <Card className={`border-2 ${getUrgencyColor(summaryData.urgency)}`}>
          <CardContent className="p-6">
            <div className="flex items-center space-x-3">
              <AlertTriangle className="h-6 w-6" />
              <div>
                <h3 className="font-semibold">Priority Level</h3>
                <p className="text-sm">{getUrgencyText(summaryData.urgency)}</p>
              </div>
            </div>
          </CardContent>
        </Card>

        {/* Symptoms Summary */}
        <Card className="shadow-card">
          <CardHeader>
            <CardTitle className="flex items-center space-x-2">
              <Heart className="h-5 w-5" />
              <span>Symptoms & Concerns</span>
            </CardTitle>
          </CardHeader>
          <CardContent className="space-y-4">
            <div>
              <h4 className="font-semibold mb-2">Primary Symptoms:</h4>
              <div className="flex flex-wrap gap-2">
                {summaryData.symptoms.length > 0 ? (
                  summaryData.symptoms.map((symptom, index) => (
                    <Badge key={index} variant="secondary">
                      {symptom}
                    </Badge>
                  ))
                ) : (
                  <Badge variant="outline">General health concerns</Badge>
                )}
              </div>
            </div>
            
            <Separator />
            
            <div>
              <h4 className="font-semibold mb-2">Your Responses:</h4>
              <div className="space-y-2">
                {Object.entries(summaryData.responses).map(([key, value]) => (
                  <div key={key} className="bg-muted/50 p-3 rounded-lg">
                    <p className="text-sm">{value}</p>
                  </div>
                ))}
              </div>
            </div>
          </CardContent>
        </Card>

        {/* AI Assessment */}
        <Card className="shadow-card">
          <CardHeader>
            <CardTitle>AI Assessment & Recommendations</CardTitle>
          </CardHeader>
          <CardContent className="space-y-4">
            <div className="bg-blue-50 border border-blue-200 rounded-lg p-4">
              <p className="text-sm text-blue-800">
                Based on your symptoms, I recommend consulting with a <strong>{summaryData.specialty}</strong> specialist. 
                Your symptoms suggest this area of expertise would be most helpful for your concerns.
              </p>
            </div>
            
            <div className="space-y-2">
              <h4 className="font-semibold">Next Steps:</h4>
              <ul className="text-sm space-y-1 pl-4">
                <li>• Schedule an appointment with a recommended doctor below</li>
                <li>• Monitor your symptoms and note any changes</li>
                <li>• Prepare a list of questions for your doctor visit</li>
                <li>• Bring this summary to your appointment</li>
              </ul>
            </div>
          </CardContent>
        </Card>

        {/* Recommended Doctors */}
        <Card className="shadow-card">
          <CardHeader>
            <CardTitle>Recommended Healthcare Providers</CardTitle>
            <p className="text-sm text-muted-foreground">
              Based on your symptoms, these doctors are best suited to help you
            </p>
          </CardHeader>
          <CardContent className="space-y-4">
            {recommendedDoctors.map((doctor) => (
              <Card key={doctor.id} className="shadow-card">
                <CardContent className="p-4">
                  <div className="flex gap-4">
                    <img
                      src={doctor.image}
                      alt={doctor.name}
                      className="w-16 h-16 rounded-full object-cover"
                    />
                    
                    <div className="flex-1">
                      <div className="flex items-start justify-between mb-2">
                        <div>
                          <h4 className="font-semibold">{doctor.name}</h4>
                          <div className="flex items-center gap-2 mb-1">
                            <Badge variant="secondary">{doctor.specialty}</Badge>
                            {doctor.availability === "Available Today" && (
                              <Badge className="bg-green-100 text-green-700">
                                🟢 Available Today
                              </Badge>
                            )}
                          </div>
                        </div>
                        
                        <div className="flex items-center space-x-1">
                          <Star className="h-4 w-4 fill-yellow-400 text-yellow-400" />
                          <span className="text-sm font-medium">{doctor.rating}</span>
                          <span className="text-sm text-muted-foreground">
                            ({doctor.reviews} reviews)
                          </span>
                        </div>
                      </div>
                      
                      <div className="grid grid-cols-1 md:grid-cols-2 gap-2 text-sm text-muted-foreground mb-3">
                        <div className="flex items-center gap-2">
                          <MapPin className="h-4 w-4" />
                          {doctor.location}
                        </div>
                        <div className="flex items-center gap-2">
                          <Clock className="h-4 w-4" />
                          {doctor.availability}
                        </div>
                      </div>
                      
                      <div className="flex gap-2">
                        <Link to={`/doctor/${doctor.id}`}>
                          <Button variant="medical" size="sm">
                            <Calendar className="h-4 w-4 mr-1" />
                            View Profile
                          </Button>
                        </Link>
                        <Button variant="outline" size="sm">
                          <Phone className="h-4 w-4 mr-1" />
                          Call {doctor.phone}
                        </Button>
                      </div>
                    </div>
                  </div>
                </CardContent>
              </Card>
            ))}
          </CardContent>
        </Card>

        {/* Actions */}
        <Card className="shadow-card">
          <CardContent className="p-6">
            <div className="flex flex-col sm:flex-row gap-4 justify-between">
              <div className="flex gap-2">
                <Button variant="outline" onClick={handlePrint}>
                  <Download className="h-4 w-4 mr-2" />
                  Print Summary
                </Button>
                <Button variant="outline" onClick={handleShare}>
                  <Share2 className="h-4 w-4 mr-2" />
                  Share
                </Button>
              </div>
              
              <div className="flex gap-2">
                <Button variant="healing" onClick={handleStartNewChat}>
                  Start New Chat
                </Button>
                <Link to="/doctors">
                  <Button variant="medical">
                    Browse All Doctors
                  </Button>
                </Link>
              </div>
            </div>
          </CardContent>
        </Card>

        {/* Medical Disclaimer */}
        <Card className="bg-muted/50">
          <CardContent className="p-4">
            <p className="text-xs text-muted-foreground text-center">
              ⚠️ <strong>Medical Disclaimer:</strong> This AI-generated summary is for informational purposes only 
              and is not a substitute for professional medical advice, diagnosis, or treatment. 
              Always consult with qualified healthcare providers for medical concerns.
            </p>
          </CardContent>
        </Card>
      </div>
    </div>
  );
};

export default ChatSummary;
